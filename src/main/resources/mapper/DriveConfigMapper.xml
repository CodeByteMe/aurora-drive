<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bess.auroradrive.mapper.DriveConfigMapper">
    
    <resultMap type="com.bess.auroradrive.model.domain.DriveConfig" id="DriveConfigResult">
        <result property="configId"    column="config_id"    />
        <result property="driveName"    column="drive_name"    />
        <result property="driveType"    column="drive_type"    />
        <result property="cacheEnable"    column="cache_enable"    />
        <result property="cloudName"    column="cloud_name"    />
        <result property="cloudAccount"    column="cloud_account"    />
        <result property="cloudPwd"    column="cloud_pwd"    />
        <result property="acceleratedDomainName"    column="accelerated_domain_name"    />
        <result property="rootPath"    column="root_path"    />
    </resultMap>

    <sql id="selectDriveConfigVo">
        select config_id, drive_name, drive_type, cache_enable, cloud_name, cloud_account, cloud_pwd, accelerated_domain_name, root_path from drive_config
    </sql>

    <select id="selectDriveConfigList" parameterType="com.bess.auroradrive.model.domain.DriveConfig" resultMap="DriveConfigResult">
        <include refid="selectDriveConfigVo"/>
        <where>  
            <if test="configId != null "> and config_id = #{configId}</if>
            <if test="driveName != null  and driveName != ''"> and drive_name like concat('%', #{driveName}, '%')</if>
            <if test="driveType != null  and driveType != ''"> and drive_type = #{driveType}</if>
            <if test="cacheEnable != null "> and cache_enable = #{cacheEnable}</if>
            <if test="cloudName != null  and cloudName != ''"> and cloud_name like concat('%', #{cloudName}, '%')</if>
            <if test="cloudAccount != null  and cloudAccount != ''"> and cloud_account = #{cloudAccount}</if>
            <if test="cloudPwd != null  and cloudPwd != ''"> and cloud_pwd = #{cloudPwd}</if>
            <if test="acceleratedDomainName != null  and acceleratedDomainName != ''"> and accelerated_domain_name like concat('%', #{acceleratedDomainName}, '%')</if>
            <if test="rootPath != null  and rootPath != ''"> and root_path = #{rootPath}</if>
        </where>
    </select>
    
    <select id="selectDriveConfigById" parameterType="Long" resultMap="DriveConfigResult">
        <include refid="selectDriveConfigVo"/>
        where config_id = #{configId}
    </select>
        
    <insert id="insertDriveConfig" parameterType="com.bess.auroradrive.model.domain.DriveConfig" useGeneratedKeys="true" keyProperty="configId">
        INSERT INTO drive_config(drive_name, drive_type, cache_enable, cloud_name, cloud_account, cloud_pwd, accelerated_domain_name, root_path)
        VALUES(#{driveName}, #{driveType}, #{cacheEnable}, #{cloudName}, #{cloudAccount}, #{cloudPwd}, #{acceleratedDomainName}, #{rootPath});
    </insert>

    <update id="updateDriveConfig" parameterType="com.bess.auroradrive.model.domain.DriveConfig">
        update drive_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="driveName != null and driveName != ''">drive_name = #{driveName},</if>
            <if test="driveType != null and driveType != ''">drive_type = #{driveType},</if>
            <if test="cacheEnable != null">cache_enable = #{cacheEnable},</if>
            <if test="cloudName != null and cloudName != ''">cloud_name = #{cloudName},</if>
            <if test="cloudAccount != null and cloudAccount != ''">cloud_account = #{cloudAccount},</if>
            <if test="cloudPwd != null and cloudPwd != ''">cloud_pwd = #{cloudPwd},</if>
            <if test="acceleratedDomainName != null and acceleratedDomainName != ''">accelerated_domain_name = #{acceleratedDomainName},</if>
            <if test="rootPath != null and rootPath != ''">root_path = #{rootPath},</if>
        </trim>
        where config_id = #{configId}
    </update>

    <delete id="deleteDriveConfigById" parameterType="Long">
        delete from drive_config where config_id = #{configId}
    </delete>

    <update id="updateCacheEnable">
        update drive_config set cache_enable = #{cacheEnable}
        where config_id = #{configId}
    </update>
</mapper>